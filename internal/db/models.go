// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0

package db

import (
	"database/sql"
	"time"
)

type History struct {
	ID   int64  `json:"id"`
	Type string `json:"type"`
	// 0 if passenger is non-user
	PassengerPhone   string    `json:"passenger_phone"`
	DriverPhone      string    `json:"driver_phone"`
	PickUpLatitude   float64   `json:"pick_up_latitude"`
	PickUpLongitude  float64   `json:"pick_up_longitude"`
	DropOffLatitude  float64   `json:"drop_off_latitude"`
	DropOffLongitude float64   `json:"drop_off_longitude"`
	Price            float64   `json:"price"`
	CreatedAt        time.Time `json:"created_at"`
	DoneAt           time.Time `json:"done_at"`
}

type NotificationSent struct {
	ID                  int64    `json:"id"`
	RequestID           int64    `json:"request_id"`
	DriverPhoneRejected []string `json:"driver_phone_rejected"`
}

type Request struct {
	ID               int64        `json:"id"`
	Type             string       `json:"type"`
	Phone            string       `json:"phone"`
	PickUpLatitude   float64      `json:"pick_up_latitude"`
	PickUpLongitude  float64      `json:"pick_up_longitude"`
	DropOffLatitude  float64      `json:"drop_off_latitude"`
	DropOffLongitude float64      `json:"drop_off_longitude"`
	Status           string       `json:"status"`
	CreatedAt        time.Time    `json:"created_at"`
	ExpireAt         sql.NullTime `json:"expire_at"`
}

type Response struct {
	ID        int64 `json:"id"`
	RequestID int64 `json:"request_id"`
	// 0 if found_driver is false
	DriverPhone     string    `json:"driver_phone"`
	DriverName      string    `json:"driver_name"`
	DriverLatitude  float64   `json:"driver_latitude"`
	DriverLongitude float64   `json:"driver_longitude"`
	CreatedAt       time.Time `json:"created_at"`
}
